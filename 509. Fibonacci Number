class Solution {
    public int fib(int n) {
        int[] arr = new int[n + 1];
        Arrays.fill(arr, -1); // Initialize array with -1
        return fibHelper(n, arr); // Use a helper method for recursion
    }

    private int fibHelper(int n, int[] arr) {
        if (n == 0) return 0; // Base case: Fibonacci of 0 is 0
        if (n == 1 || n == 2) return 1; // Base case: Fibonacci of 1 and 2 is 1

        if (arr[n] != -1) {
            return arr[n]; // Return memoized value
        }

        // Compute Fibonacci and store in arr
        arr[n] = fibHelper(n - 1, arr) + fibHelper(n - 2, arr);
        return arr[n];
    }
}
